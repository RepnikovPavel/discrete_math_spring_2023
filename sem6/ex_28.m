%Листинг №24
%Построение префиксной схемы кодирования
%Очищаем рабочее пространство
clear, clc
%Определяем случайную длину алфавита сообщений
n=5+randi(5);
%Определяем случайные длины элементарных кодов до тех пор,
%пока не будет выполнено неравенство Макмиллана
l=randi(n,n,1); McM = sum(2.^(-l));
while McM >= 1
    l=randi(n,n,1); McM = sum(2.^(-l));
end
%Сортируем длины кодовых слов по возрастанию
l=sort(l);
%В цикле генерируем случайно кодовые слова и проверяем:
%являются ли они префиксами друг друга?
CodeW=cell(n,1); f=1;
while f
    %Случайно генерируем кодовые слова
    for i=1:n
        CodeW{i}=randi(2,1,l(i))-1;
    end
    %Проверяем особый случай, когда длина первого слова
    %равна единице, в этом случае все остальные слова
    %должны начинаться с противоположного символа, чтобы
    %обеспечить требование префиксности кодирования
    if l(1)==1
        for i=2:n
            CodeW{i}(1)=~CodeW{1}(1);
        end
    end
    %Проверяем условие того, что кодирование префиксное
    %(f=0) или, наоборот, не префиксное (f=1)
    f=0;
    for i=1:(n-1)
        Li=CodeW{i};
        for j=(i+1):n
            Lj=CodeW{j};
            if length(Li) <= length(Lj)
                if sum(xor(Li,Lj(1:length(Li))))==0
                    f=1; break
                end   
            end
        end
        if f==1
            break
        end
    end
end
%Выводим таблицу кодовых слов, которые обеспечивают
%префиксное кодирование
fprintf('Таблица кодовых слов, n = %i\n',n)
for i=1:n
 fprintf('l = %i, CodeW = ',l(i))
 fprintf('%i',CodeW{i}), fprintf('\n')
end